/*
 * Copyright (c) 2018, 2023, Oracle and/or its affiliates. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
 * or visit www.oracle.com if you need additional information or have any
 * questions.
 */

plugins {
    id 'skara-images'
}

module {
    name = 'org.openjdk.skara.cli'
    test {
        requires 'org.openjdk.skara.test'
        requires 'org.junit.jupiter.api'
        opens 'org.openjdk.skara.cli.debug' to 'org.junit.platform.commons'
    }

}

dependencies {
    implementation project(':args')
    implementation project(':census')
    implementation project(':ini')
    implementation project(':jcheck')
    implementation project(':vcs')
    implementation project(':webrev')
    implementation project(':json')
    implementation project(':host')
    implementation project(':forge')
    implementation project(':issuetracker')
    implementation project(':proxy')
    implementation project(':version')
    implementation project(':process')
    implementation project(':jbs')
    implementation project(':network')

    testImplementation project(':test')
}

// Load deps.env and remove all double quotes
def depsEnv = new Properties()
file("../deps.env").withInputStream { { depsEnv.load(it)}}
depsEnv.entrySet().forEach(e -> e.setValue(((String) e.getValue()).replaceAll("\"", "")))

images {
    ext.launchers = [
        'git-jcheck': 'org.openjdk.skara.cli/org.openjdk.skara.cli.GitJCheck',
        'git-webrev': 'org.openjdk.skara.cli/org.openjdk.skara.cli.GitWebrev',
        'git-defpath': 'org.openjdk.skara.cli/org.openjdk.skara.cli.GitDefpath',
        'git-fork': 'org.openjdk.skara.cli/org.openjdk.skara.cli.GitFork',
        'git-pr': 'org.openjdk.skara.cli/org.openjdk.skara.cli.GitPr',
        'git-token': 'org.openjdk.skara.cli/org.openjdk.skara.cli.GitToken',
        'git-info': 'org.openjdk.skara.cli/org.openjdk.skara.cli.GitInfo',
        'git-translate': 'org.openjdk.skara.cli/org.openjdk.skara.cli.GitTranslate',
        'git-skara': 'org.openjdk.skara.cli/org.openjdk.skara.cli.GitSkara',
        'git-sync': 'org.openjdk.skara.cli/org.openjdk.skara.cli.GitSync',
        'git-publish': 'org.openjdk.skara.cli/org.openjdk.skara.cli.GitPublish',
        'git-proxy': 'org.openjdk.skara.cli/org.openjdk.skara.cli.GitProxy',
        'git-trees': 'org.openjdk.skara.cli/org.openjdk.skara.cli.GitTrees',
        'git-hg-export': 'org.openjdk.skara.cli/org.openjdk.skara.cli.GitHgExport',
        'git-backport': 'org.openjdk.skara.cli/org.openjdk.skara.cli.GitBackport'
    ]

    ext.modules = ['jdk.crypto.ec']

    windows_x64 {
        modules = ext.modules
        launchers = ext.launchers
        bundles = ['zip', 'tar.gz']
        jdk {
            url = depsEnv.getProperty("JDK_WINDOWS_X64_URL")
            sha256 = depsEnv.getProperty("JDK_WINDOWS_X64_SHA256")
        }
    }

    linux_x64 {
        modules = ext.modules
        launchers = ext.launchers
        man = 'cli/resources/man'
        bundles = ['zip', 'tar.gz']
        jdk {
            url = depsEnv.getProperty("JDK_LINUX_X64_URL")
            sha256 = depsEnv.getProperty("JDK_LINUX_X64_SHA256")
        }
    }

    macos_x64 {
        modules = ext.modules
        launchers = ext.launchers
        man = 'cli/resources/man'
        bundles = ['zip', 'tar.gz']
        jdk {
            url = depsEnv.getProperty("JDK_MACOS_X64_URL")
            sha256 = depsEnv.getProperty("JDK_MACOS_X64_SHA256")
        }
    }

    local {
        modules = ext.modules
        launchers = ext.launchers
        man = 'cli/resources/man'
        bundles = ['zip', 'tar.gz']
    }
}
